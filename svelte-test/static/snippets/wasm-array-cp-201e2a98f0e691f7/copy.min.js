class t{static toI8Slice(t,r,e,a){new Int8Array(t.buffer,e,a).set(r,0)}static toI8Array(t,r,e,a){const s=new Int8Array(t.buffer,r,e);a.set(s,0)}static toI16Slice(t,r,e,a){new Int16Array(t.buffer,e,a).set(r,0)}static toI16Array(t,r,e,a){const s=new Int16Array(t.buffer,r,e);a.set(s,0)}static toI32Slice(t,r,e,a){new Int32Array(t.buffer,e,a).set(r,0)}static toI32Array(t,r,e,a){const s=new Int32Array(t.buffer,r,e);a.set(s,0)}static toU8Slice(t,r,e,a){new Uint8Array(t.buffer,e,a).set(r,0)}static toU8Array(t,r,e,a){const s=new Uint8Array(t.buffer,r,e);a.set(s,0)}static toU8CSlice(t,r,e,a){new Uint8ClampedArray(t.buffer,e,a).set(r,0)}static toU8CArray(t,r,e,a){const s=new Uint8ClampedArray(t.buffer,r,e);a.set(s,0)}static toU16Slice(t,r,e,a){new Uint16Array(t.buffer,e,a).set(r,0)}static toU16Array(t,r,e,a){const s=new Uint16Array(t.buffer,r,e);a.set(s,0)}static toU32Slice(t,r,e,a){new Uint32Array(t.buffer,e,a).set(r,0)}static toU32Array(t,r,e,a){const s=new Uint32Array(t.buffer,r,e);a.set(s,0)}static toF32Slice(t,r,e,a){new Float32Array(t.buffer,e,a).set(r,0)}static toF32Array(t,r,e,a){const s=new Float32Array(t.buffer,r,e);a.set(s,0)}static toF64Slice(t,r,e,a){new Float64Array(t.buffer,e,a).set(r,0)}static toF64Array(t,r,e,a){const s=new Float64Array(t.buffer,r,e);a.set(s,0)}static toBigInt64Slice(t,r,e,a){new BigInt64Array(t.buffer,e,a).set(r,0)}static toBigInt64Array(t,r,e,a){const s=new BigInt64Array(t.buffer,r,e);a.set(s,0)}static toBigUint64Slice(t,r,e,a){new BigUint64Array(t.buffer,e,a).set(r,0)}static toBigUint64Array(t,r,e,a){const s=new BigUint64Array(t.buffer,r,e);a.set(s,0)}}export{t as JSArrayBufferCopy};
